@model Event_Attender.Web.Areas.Administrator.Models.EventDisplayVM


<div id="Admin-Container">
    @{await Html.RenderPartialAsync("_AdminEventDisplay", Model);}
    <div id="Main-Display">
            <div>

                <h4>@Html.DisplayFor(model => model.OnDisplay.Naziv)</h4>
                <hr />
                <form asp-area="Administrator" asp-controller="Searchbar" asp-action="SnimiEvent">
                    <label>
                        @Html.DisplayNameFor(model => model.OnDisplay.Id)
                    </label>
                    <input type="text" name="Id" value="@Html.DisplayFor(model => model.OnDisplay.Id)" readonly />

                    <label>
                        @Html.DisplayNameFor(model => model.OnDisplay.Naziv)
                    </label>
                    <input type="text" name="Naziv" value="@Html.DisplayFor(model => model.OnDisplay.Naziv)" />

                    <label>
                        @Html.DisplayNameFor(model => model.OnDisplay.Opis)
                    </label>
                    <input type="text" name="Opis" value="@Html.DisplayFor(model => model.OnDisplay.Opis)" />

                    <label>
                        @Html.DisplayNameFor(model => model.OnDisplay.DatumOdrzavanja)
                    </label>
                    <input type="date" name="Datum" value="@Html.DisplayFor(model => model.OnDisplay.DatumOdrzavanja)" />

                    <label>
                        @Html.DisplayNameFor(model => model.OnDisplay.VrijemeOdrzavanja)
                    </label>
                    <input type="time" name="Vrijeme" value="@Html.DisplayFor(model => model.OnDisplay.VrijemeOdrzavanja)" />

                    <label>
                        @Html.DisplayNameFor(model => model.OnDisplay.Kategorija)
                    </label>
                    <select name="Kategorija">
                        @{var tipovi = new SelectList(Enum.GetValues(typeof(Kategorija)));}
                        @foreach (var item in tipovi)
                        {
                            if (Model.OnDisplay.Kategorija.ToString() == item.Text)
                            {
                                <option value="@item.Text" selected>@item.Text</option>
                            }
                            else
                            {
                                <option value="@item.Text">@item.Text</option>
                            }
                        }
                    </select>


                    <label>
                        @Html.DisplayNameFor(model => model.OnDisplay.IsOdobren)
                    </label>
                    @if (Model.OnDisplay.IsOdobren == true)
                    {
                        <input value="Odobren" name="IsOdobren" type="checkbox" checked />
                    }
                    else
                    {
                        <input value="Odobren" name="IsOdobren" type="checkbox" />
                    }

                    <label>
                        @Html.DisplayNameFor(model => model.OnDisplay.IsOtkazan)
                    </label>
                    @if (Model.OnDisplay.IsOtkazan == true)
                    {
                        <input value="Otkazan" name="IsOtkazan" type="checkbox" checked />
                    }
                    else
                    {
                        <input value="Otkazan" name="IsOtkazan" type="checkbox" />
                    }

                    <label>
                        @Html.DisplayNameFor(model => model.OnDisplay.ProstorOdrzavanjaNaziv)
                    </label>
                    <input type="text" name="Prostor" value="@Html.DisplayFor(model => model.OnDisplay.ProstorOdrzavanjaNaziv)" />

                    <label>
                        @Html.DisplayNameFor(model => model.OnDisplay.OrganizatorNaziv)
                    </label>
                    <input type="text" name="Organizator" value="@Html.DisplayFor(model => model.OnDisplay.OrganizatorNaziv)" />

                    <label>
                        @Html.DisplayNameFor(model => model.OnDisplay.AdministratorNaziv)
                    </label>
                    <input type="text" name="Administrator" value="@Html.DisplayFor(model => model.OnDisplay.AdministratorNaziv)" />

                    <input type="submit" value="Snimi" class="btn btn-success" />
                </form>

            </div>
    </div>
</div>

