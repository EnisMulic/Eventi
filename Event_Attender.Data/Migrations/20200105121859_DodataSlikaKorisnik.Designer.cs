// <auto-generated />
using System;
using Event_Attender.Data.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Event_Attender.Data.Migrations
{
    [DbContext(typeof(MojContext))]
    [Migration("20200105121859_DodataSlikaKorisnik")]
    partial class DodataSlikaKorisnik
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Event_Attender.Data.Models.Administrator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OsobaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OsobaId");

                    b.ToTable("Administrator");
                });

            modelBuilder.Entity("Event_Attender.Data.Models.Drzava", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Drzava");
                });

            modelBuilder.Entity("Event_Attender.Data.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdministratorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumOdrzavanja")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsOdobren")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOtkazan")
                        .HasColumnType("bit");

                    b.Property<int>("Kategorija")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrganizatorId")
                        .HasColumnType("int");

                    b.Property<int>("ProstorOdrzavanjaId")
                        .HasColumnType("int");

                    b.Property<string>("Slika")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VrijemeOdrzavanja")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AdministratorId");

                    b.HasIndex("OrganizatorId");

                    b.HasIndex("ProstorOdrzavanjaId");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("Event_Attender.Data.Models.Grad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DrzavaId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DrzavaId");

                    b.ToTable("Grad");
                });

            modelBuilder.Entity("Event_Attender.Data.Models.Izvodjac", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipIzvodjaca")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Izvodjac");
                });

            modelBuilder.Entity("Event_Attender.Data.Models.IzvodjacEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int>("IzvodjacId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("IzvodjacId");

                    b.ToTable("IzvodjacEvent");
                });

            modelBuilder.Entity("Event_Attender.Data.Models.Karta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Cijena")
                        .HasColumnType("real");

                    b.Property<int>("KupovinaTipId")
                        .HasColumnType("int");

                    b.Property<int>("Tip")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KupovinaTipId");

                    b.ToTable("Karta");
                });

            modelBuilder.Entity("Event_Attender.Data.Models.Korisnik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrojKreditneKartice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OsobaId")
                        .HasColumnType("int");

                    b.Property<string>("PostanskiBroj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slika")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OsobaId");

                    b.ToTable("Korisnik");
                });

            modelBuilder.Entity("Event_Attender.Data.Models.Kupovina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Kupovina");
                });

            modelBuilder.Entity("Event_Attender.Data.Models.KupovinaTip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrojKarata")
                        .HasColumnType("int");

                    b.Property<float>("Cijena")
                        .HasColumnType("real");

                    b.Property<int>("KupovinaId")
                        .HasColumnType("int");

                    b.Property<int?>("ProdajaTipId")
                        .HasColumnType("int");

                    b.Property<int>("TipKarte")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KupovinaId");

                    b.HasIndex("ProdajaTipId");

                    b.ToTable("KupovinaTip");
                });

            modelBuilder.Entity("Event_Attender.Data.Models.Like", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumLajka")
                        .HasColumnType("datetime2");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Like");
                });

            modelBuilder.Entity("Event_Attender.Data.Models.LogPodaci", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LogPodaci");
                });

            modelBuilder.Entity("Event_Attender.Data.Models.Organizator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("GradId")
                        .HasColumnType("int");

                    b.Property<int?>("LogPodaciId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GradId");

                    b.HasIndex("LogPodaciId");

                    b.ToTable("Organizator");
                });

            modelBuilder.Entity("Event_Attender.Data.Models.Osoba", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("GradId")
                        .HasColumnType("int");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LogPodaciId")
                        .HasColumnType("int");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GradId");

                    b.HasIndex("LogPodaciId");

                    b.ToTable("Osoba");
                });

            modelBuilder.Entity("Event_Attender.Data.Models.ProdajaTip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrojProdatihKarataTip")
                        .HasColumnType("int");

                    b.Property<float>("CijenaTip")
                        .HasColumnType("real");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<bool>("PostojeSjedista")
                        .HasColumnType("bit");

                    b.Property<int>("TipKarte")
                        .HasColumnType("int");

                    b.Property<int>("UkupnoKarataTip")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("ProdajaTip");
                });

            modelBuilder.Entity("Event_Attender.Data.Models.ProstorOdrzavanja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GradId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipProstoraOdrzavanja")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GradId");

                    b.ToTable("ProstorOdrzavanja");
                });

            modelBuilder.Entity("Event_Attender.Data.Models.Radnik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OsobaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OsobaId");

                    b.ToTable("Radnik");
                });

            modelBuilder.Entity("Event_Attender.Data.Models.RadnikEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int>("RadnikId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("RadnikId");

                    b.ToTable("RadnikEvent");
                });

            modelBuilder.Entity("Event_Attender.Data.Models.Recenzija", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Komentar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KupovinaId")
                        .HasColumnType("int");

                    b.Property<int>("Ocjena")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KupovinaId");

                    b.ToTable("Recenzija");
                });

            modelBuilder.Entity("Event_Attender.Data.Models.Sjediste", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrojSjedista")
                        .HasColumnType("int");

                    b.Property<int>("KartaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KartaId");

                    b.ToTable("Sjediste");
                });

            modelBuilder.Entity("Event_Attender.Data.Models.Sponzor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sponzor");
                });

            modelBuilder.Entity("Event_Attender.Data.Models.SponzorEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int>("Prioritet")
                        .HasColumnType("int");

                    b.Property<int>("SponzorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("SponzorId");

                    b.ToTable("SponzorEvent");
                });

            modelBuilder.Entity("Event_Attender.Data.Models.Administrator", b =>
                {
                    b.HasOne("Event_Attender.Data.Models.Osoba", "Osoba")
                        .WithMany()
                        .HasForeignKey("OsobaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Event_Attender.Data.Models.Event", b =>
                {
                    b.HasOne("Event_Attender.Data.Models.Administrator", "Administrator")
                        .WithMany()
                        .HasForeignKey("AdministratorId");

                    b.HasOne("Event_Attender.Data.Models.Organizator", "Organizator")
                        .WithMany()
                        .HasForeignKey("OrganizatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Event_Attender.Data.Models.ProstorOdrzavanja", "ProstorOdrzavanja")
                        .WithMany()
                        .HasForeignKey("ProstorOdrzavanjaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Event_Attender.Data.Models.Grad", b =>
                {
                    b.HasOne("Event_Attender.Data.Models.Drzava", "Drzava")
                        .WithMany()
                        .HasForeignKey("DrzavaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Event_Attender.Data.Models.IzvodjacEvent", b =>
                {
                    b.HasOne("Event_Attender.Data.Models.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Event_Attender.Data.Models.Izvodjac", "Izvodjac")
                        .WithMany()
                        .HasForeignKey("IzvodjacId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Event_Attender.Data.Models.Karta", b =>
                {
                    b.HasOne("Event_Attender.Data.Models.KupovinaTip", "KupovinaTip")
                        .WithMany()
                        .HasForeignKey("KupovinaTipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Event_Attender.Data.Models.Korisnik", b =>
                {
                    b.HasOne("Event_Attender.Data.Models.Osoba", "Osoba")
                        .WithMany()
                        .HasForeignKey("OsobaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Event_Attender.Data.Models.Kupovina", b =>
                {
                    b.HasOne("Event_Attender.Data.Models.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Event_Attender.Data.Models.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Event_Attender.Data.Models.KupovinaTip", b =>
                {
                    b.HasOne("Event_Attender.Data.Models.Kupovina", "Kupovina")
                        .WithMany()
                        .HasForeignKey("KupovinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Event_Attender.Data.Models.ProdajaTip", "ProdajaTip")
                        .WithMany()
                        .HasForeignKey("ProdajaTipId");
                });

            modelBuilder.Entity("Event_Attender.Data.Models.Like", b =>
                {
                    b.HasOne("Event_Attender.Data.Models.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Event_Attender.Data.Models.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Event_Attender.Data.Models.Organizator", b =>
                {
                    b.HasOne("Event_Attender.Data.Models.Grad", "Grad")
                        .WithMany()
                        .HasForeignKey("GradId");

                    b.HasOne("Event_Attender.Data.Models.LogPodaci", "LogPodaci")
                        .WithMany()
                        .HasForeignKey("LogPodaciId");
                });

            modelBuilder.Entity("Event_Attender.Data.Models.Osoba", b =>
                {
                    b.HasOne("Event_Attender.Data.Models.Grad", "Grad")
                        .WithMany()
                        .HasForeignKey("GradId");

                    b.HasOne("Event_Attender.Data.Models.LogPodaci", "LogPodaci")
                        .WithMany()
                        .HasForeignKey("LogPodaciId");
                });

            modelBuilder.Entity("Event_Attender.Data.Models.ProdajaTip", b =>
                {
                    b.HasOne("Event_Attender.Data.Models.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Event_Attender.Data.Models.ProstorOdrzavanja", b =>
                {
                    b.HasOne("Event_Attender.Data.Models.Grad", "Grad")
                        .WithMany()
                        .HasForeignKey("GradId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Event_Attender.Data.Models.Radnik", b =>
                {
                    b.HasOne("Event_Attender.Data.Models.Osoba", "Osoba")
                        .WithMany()
                        .HasForeignKey("OsobaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Event_Attender.Data.Models.RadnikEvent", b =>
                {
                    b.HasOne("Event_Attender.Data.Models.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Event_Attender.Data.Models.Radnik", "Radnik")
                        .WithMany()
                        .HasForeignKey("RadnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Event_Attender.Data.Models.Recenzija", b =>
                {
                    b.HasOne("Event_Attender.Data.Models.Kupovina", "Kupovina")
                        .WithMany()
                        .HasForeignKey("KupovinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Event_Attender.Data.Models.Sjediste", b =>
                {
                    b.HasOne("Event_Attender.Data.Models.Karta", "Karta")
                        .WithMany()
                        .HasForeignKey("KartaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Event_Attender.Data.Models.SponzorEvent", b =>
                {
                    b.HasOne("Event_Attender.Data.Models.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Event_Attender.Data.Models.Sponzor", "Sponzor")
                        .WithMany()
                        .HasForeignKey("SponzorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
